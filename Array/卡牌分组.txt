//C++写法
class Solution {
public:
    bool hasGroupsSizeX(vector<int>& deck) {
            map<int, int> dict;
            for (int& n : deck) {
                    dict[n]++;
            }
            
            int min = INT_MAX;
            for (auto iter = dict.begin(); iter != dict.end(); iter++) {
                    if (iter->second < min) {
                            min = iter->second;
                    }
            }
            
            if (min < 2) {
                    return false;
            }
            
            int x = 0;
            for (int i = 2; i <= min; i++) {
                    auto iter = dict.begin();
                    for (; iter != dict.end(); iter++) {
                            if (iter->second % i != 0) {
                                    break;
                            }
                    }
                    if (iter == dict.end()) {
                            x = i;
                    }
            }
            
            if (x != 0) {
                    return true;
            }else {
                    return false;
            }
    }
};

//Golang写法
func hasGroupsSizeX(deck []int) bool {
        dict := make(map[int]int);
        for _, n := range deck {
                dict[n] = dict[n] + 1;
        }
        
        min := dict[deck[0]];
        for  _, val := range dict {
                if val < min {
                        min = val;
                }
        }
        
        if min < 2 {
                return false;
        }
        
        vec := make([]int, 0);
        for _,val := range dict {
                vec = append(vec, val)
        }
        
        x := 0;
        for i := 2; i <= min; i++ {
                j := 0;
                for _, val := range vec {
                        if val % i != 0 {
                                break;
                        }
                        j++;
                }
                if j == len(vec) {
                        x = i;
                }
        }
        
        if x != 0 {
                return true;
        }else {
                return false;
        }
}
