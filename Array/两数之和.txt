//C++代码
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
            map<int, int> cache;
            vector<int> ret;
            for (int i = 0; i < nums.size(); i++) {
                    int n = nums[i];
                    int m = target - n;
                    auto iter = cache.find(m);
                    if (iter != cache.end()) {
                            ret.push_back(i);
                            ret.push_back(iter->second);
                            break;
                    }else {
                            cache.insert({n,i});
                    }
            }
            return ret;
    }
};

//Golang代码
func twoSum(nums []int, target int) []int {
        dict := make(map[int]int);
        ret := []int{0,0};
        for i := 0; i < len(nums); i++ {
                n := nums[i];
                m := target - n;
                val, exist := dict[m];
                if exist {
                        ret[0] = i;
                        ret[1] = val;
                        break;
                }else {
                        dict[n]=i;
                }
        }
        return ret;
}
